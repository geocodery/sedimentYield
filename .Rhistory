year
class(year)
class(ran)
Log<-vector(mode="logical",10)
Log
length(vec)
length(ran)
length(year)
data_frame<-data.frame(vec,ran,year,Log)
vec<-1:11
data_frame<-data.frame(vec,ran,year,Log)
year<-as.character(2000:2009)
vec<-1:10
data_frame<-data.frame(vec,ran,year,Log)
data_frame
n
s
b
df<-data.frame(n,s,b)
df
??row.names()
row.names(data_frame)
data_frame<-data.frame(vec,ran,year,Log)
row.names(data_frame)
vec<-1:10
ran<-round(rnorm(10),2)
year<-as.character(2000:2009)
class(year)
class(ran)
Log<-vector(mode="logical",10)
length(vec)
length(ran)
length(year)
data_frame<-data.frame(vec,ran,year,Log)
data_frame
row.names(data_frame)
View(data_frame)
nombre_fila<-LETTERS[1:10]
row.names(data_frame)<-nombre_fila
row.names(data_frame)
data_frame
data_frame
colnames()
x<-[-5,5]
x<-c[-5,5]
x<-c[-5:5]
x<-c(-5:5)
x
y=x^2-15
y
plot(y)
a<-c(1,2,3,"a","b")
c2c<-c(1,2,4,5,7,3)
c2c
c2c[c2c>4]
listaX2<-list(edad=list(m1=20,m2=50,m3=34),peso=60,nombre="roy")
listaX2
listaX2<-list(edad=list(m1=20,m2=50,m3=34),peso=list(m1=75,m2=80,m3=60),nombre=list(m1="roy",m2="pato",m3="gg"))
listaX2
listaX2$edad
listaX2$m1
listaX2$$m1
M1<-matrix(1:6,nrow=2,ncol=3)
M1
L<-1:5
View(iris)
class(iris)
class(M1)
data.frame(peso=10:15,nombres=c("a","b","c","d"),edad=20:25)
data.frame(peso=10:15,nombres=c("a","b","c","d","e"),edad=20:25)
data.frame(peso=10:15,nombres=c("a","b","c","d","e","f"),edad=20:25)
a<-matrix(c(cos(A),sen(A),-sen(A),cos(A)),2,2)
A<-pi/2
a<-matrix(c(cos(A),sen(A),-sen(A),cos(A)),2,2)
sen(90)
Sen(90)
A<-32
a<-matrix(c(cos(A),sen(A),-sen(A),cos(A)),2,2)
sen()
Sen()
A<-pi*32/180
a<-matrix(c(cos(A),sen(A),-sen(A),cos(A)),2,2)
A<-pi*32/180
m<-cbind(c(1,0),c(2,1),c(1,1))
msc<-cbind(c(cos(A),sen(A)),c(-sen(A),cos(A)))
msc<-cbind(c(cos(A),sen(A)),c(-sen(A),cos(A)))
sen(90)
mt<-msc%*%m
m<-cbind(c(1,0),c(2,1),c(1,1))
msc<-cbind(c(cos(A),sen(A)),c(-sen(A),cos(A)))
sen(90)
??sen
msc<-cbind(c(cos(A),sin(A)),c(-sin(A),cos(A)))
mt<-msc%*%m
plot(mt)
plot(mt,xlim = 2,ylim=4)
plot(mt,xlab = 4,ylab=4)
plot(mt,ci.col = 5,ci.row=5)
plot(mt,axes = 4)
mt
mt
m
??plot
??plot()
plot(mt,col.axis=5)
plot(mt)
plot(mt,lheight=5)
rm(list=ls())
plot(mt,mai=c(5,5,5,5))
plot(mt,mai=1)
plot(mt,mai=0.9)
128/1:128
128%%1:128
which(div==0)
div<-128%%1:128
which(div==0)
data<-c(1,2,3,2,3,3,2,2,1)
fdata<-factor(data)
fdata<-factor(data)
data<-c(1,2,3,2,3,3,2,2,1,4,4,4,5,4)
fdata<-factor(data)
rdata<-factor(data,labels<-c("I","II","III"))
rdata
rdata<-factor(data,labels<-c("I","II","III","IV","V"))
rdata
data<-c(1,2,3,3,2,1)
fdata<-factor(data)
rdata<-factor(data,labels<-c("I","II","III","IV","V"))
rdata<-factor(data,labels<-c("I","II","III"))
rdata
levels(fdata)=c("I","II","III")
fdata
mons<-c("March","April","January","November","January","September","October","September","November","August","January","November","November","February","May","August","July","December","August","August","September","November","February","April")
mons<-factor(mons)
table(mons)
mons = factor(mons,levels=c("January","February","March",
"April","May","June","July","August","September",
"October","November","December"),ordered=TRUE)
mons[1] < mons[2]
table(mons)
fert<-c(10,10,50,20,20,20,10,50,20)
fert<-factor(fert,levels<-c(10,20,50),ordered = T)
fert
mean(fert)
mean(as.numeric(levels(fert)[fert]))
str(fert)
class(fert)
df<-data.frame(n,s,b)
n<-c(1,3,6)
s<-c("aa","bb","cc")
b<-c(TRUE,FALSE,TRUE)
df<-data.frame(n,s,b)
class(df)
class(fert)
lets<-sample(letters,size=100,replace = T)
lets<-factor(lets)
table(lets[1:5])
lets
table(lets[1:4])
view(lets)
table(factor(lets[1:5]))
table(factor(lets[1:6]))
l1<-factor(sample(letters,size=10,replace=T))
l2<-factor(sample(letters,size=10,replace=T))
l1
l2
l2<-factor(c(levels(l1)[l1],levels(12[12])))
l2
levels(l1)
levels(l1)[l1]
myvars <- c("v1", "v2", "v3")
newdata <- mydata[myvars]
myvars <- c("v1", "v2", "v3")
newdata <- mydata[myvars]
newdata <- data[myvars]
newdata <- mydata[myvars]
??mydata
install.packages("shapefiles")
library(shapefiles)
library("shapefiles")
install.packages("shiny",dependencies = T)
library(shiny)
data(meuse)
meuse
apt-get install gnome-session-flashback
apt-get install gnome-session-flashback
install gnome-session-flashback
require(shiny)
require(shiny)
require(shiny)
require(shiny)
1:10
1:10-1
1:{10-1}
1:10
1:10-1
1:{10-1}
x <- seq (-3,3,0.5);x
x <- seq (-3,3,0.5)
x
x <- seq (-3,3,0.5)
seq (-3,3,length=10)
seq (-3, by=0.5,length=10)
seq(along=x)
along
along=x
seq(along=x)
along
seq (-3,3,length=10)
seq (-3, by=0.5,length=10)
seq(along=x)
along
x <- 1:4
x
rep(x,times=3)
rep(x,each=3)
rep(x,times=2,each=3)
rep(c(0,1),times=c(4,3))
x <- seq(19,6,-3);x
rep(x,1:length(x))
length(x)
x <- c(20,80,30,50,0)
x <- c(20,80,30,50,0)
x
2order (x, decreasing=F)
2order(x, decreasing=F)
order(x, decreasing=F)
order(x, decreasing=T)
order(x, decreasing=F)
sort (x, decreasing=F)
rank(x)
min(x)
which.min(x)
which.max(x)
x <- c(1,1,3:1,1:4,3); y <- c(0,9:1)
x.ord <- order(x,y)
x.ord;x;y
x <- c(1,1,3:1,1:4,3); y <- c(0,9:1)
x
y
order(x,y)
x.ord
x
y
x.ord;x;y
a<-c(TRUE,TRUE,FALSE,FALSE)
a<-c(TRUE,TRUE,FALSE,FALSE)
a
b<-c(F, T, F, T)
b
a&b
a|b
!(a&b)
(!a)|(!b)
rm(list=ls())
x <- c(3,6,4,2,8,9)
x
print (x); length(x)
x[8:10] <- 3;x
x[8:10]
rm(list=ls())
x <- c(3,6,4,2,8,9)
x[8:10]
x[8:10] <- 3
x
rm(list=ls())
is.na(x)
x <- c(3,6,4,2,8,9)
print (x); length(x)
x[8:10] <- 3;x
is.na(x)
!is.na(x)
which(is.na(x))
x[is.na(x)]<-999;x
x==NA
is.na(x)
x
data5
data
data$q_005
data$q_005[!is.na(data$q_005)]
data5 <- data$q_005[!is.na(data$q_005)]
data
1+nan
1+NaN
1-NaN
x <- c(0,7,8); x/x
x
1/x
-1/x
is.nan(x)
is.nan(x/x)
is.nan(1/x)
1/0
juntar <- paste("Una ", "frase ", "cualquiera",  collapse ="");juntar
v1<-c("A","B")
v1
v2<-2:3
v2
codigos <- paste(v1,v2, sep = "");print(codigos)
codigos <- paste(v1,v2, sep = ".");print(codigos)
x <- paste(LETTERS[1:5]);x
x <- paste(LETTERS[1:5], collapse="");x
month.abb[7:9]
month.abb
verano <- month.abb[7:9]; verano
cat(verano)                     # el resultado no puede guardarse en ua variable
cat(verano,"\n")
cat(verano, sep=',')
cat(verano, sep=';', fill=3)
cat(verano, sep=';', fill=2)
cat(verano, sep=';', fill=1)
cat(verano, sep=';', fill=4)
cat("Estaciones:","\t","Moncloa","\n", "\t", "\t","Aluche","\n")
cat("Estaciones:","\t","Moncloa","\n", "\t", "\t","Aluche","\n")
x<-2/3; cat(paste("resultado", signif(x,2), sep=" : " ),"\n")
x<-2/3; cat(paste("resultado", signif(x,4), sep=" : " ),"\n")
edad <- c(12,22,15,16,10)
names(edad)
names(edad) <- paste("suj#", sep = "",length(edad):1); edad
edad
names(edad)
edad["suj#2"]
edad[length(edad)-1]
names(edad) <- NULL; edad
estudios <- c(1,3,1,1,3,4,3)
factor(estudios)
nivel.estudios <- factor(estudios, levels=1:4,labels=c("primarios", "secundarios", "superiores", "doctorado"), ordered=T)
nivel.estudios
factor(c(5,2,2,4,5,4,3,3,1), 2:5, exclude=4) # los valores 1 y 4 se consideran valores perdidos
levels(nivel.estudios)
as.numeric(nivel.estudios)           # recodifica el factor numericamente
nivel.estudios
as.numeric(nivel.estudios)           # recodifica el factor numericamente
codigo.postal <- factor(c('28011', '28044', '28011','28013', '28013','28023'))
equipo.futbol <- factor(c('VAL', 'VAL', 'FCB','VAL', 'FCB','ATM'))
equipo.futbol                                                # ordena los factores alfabeticamente
as.numeric(equipo.futbol)
as.character(equipo.futbol)  # convierte en cadenas de caracters no en factor de nuevo
as.character(equipo.futbol)  # convierte en cadenas de caracters no en factor de nuevoe
X <- 1:12
dim(X) <- c(4,3); X # los elementos se organizan por columnas
matrix(1:12,nrow=3,ncol=4,byrow=T)
matrix(1:12,nrow=4,byrow=T)
X <- 1:12
dim(X) <- c(4,3); X # los elementos se organizan por columnas
matrix(1:12,nrow=3,byrow=T)
matrix(1:12,nrow=4,byrow=T)
tamano <- dim(Mi.matriz)
Mi.matriz <- matrix(1:12,3,4,F); Mi.matriz
X <- 1:12
dim(X) <- c(4,3); X # los elementos se organizan por columnas
matrix(1:12,nrow=3,ncol=4,byrow=T)
matrix(1:12,nrow=4,byrow=T)
Mi.matriz <- matrix(1:12,3,4,F); Mi.matriz
tamano <- dim(Mi.matriz)             # otro uso de dim(); devuelve las dimensiones de la matriz
tamano
rownames(Mi.matriz)
rownames(Mi.matriz) <- LETTERS[1:tamano[1]]; Mi.matriz
colnames(Mi.matriz) <- paste("Var",1:tamano[2], sep=""); Mi.matriz
dimnames(Mi.matriz)
X1 <- c(3,7,5)
X2 <- c(8,3,1)
Xx <- cbind(X1,X2);Xx
Yy <- rbind(X2,X1);Yy
Zz <- cbind(X1,Xx);Zz
X <- matrix(c(1,4,12,15),2,2);X
X[1,2]
X[1, ]
X[ ,2]
X[3]
Mi.matriz['B',]
X <- matrix(c(1,4,12,15),2,2); X
X <- matrix(c(1,4,12,15),2,2); X
Y <- matrix(1:4,2,2); Y
X+Y
X-Y
X%*%Y
X*Y
t(X)
det(X)
X.inv <- solve (X)
X.inv
X%*%X.inv
A <- matrix(c(1,4,12,15),2,2); A
B <- matrix(c(5,2),2,1);B
X <- solve(A,B); X
A%*%X
t(x)
t(X)
X
X <- matrix(c(1,4,12,15),2,2); X
rowSums(X)
colSums(X)
rowMeans(X)
colMeans(X)
X
apply(X,1,sum)
apply(X,2,mean)
apply(X,1,sd)
apply(X,1,mean)      # media por columnas; equivale a colMeans(X)
A <- array(1:24, c(3, 4, 2)); A
dimnames(A) <- list(c("fila1", "fila2", "fila3"),
c("col1", "col2", "col3", "col4"), c("capa 1", "capa 2"));A
rm(list=ls())
mis.num <- seq(1.0, 2.0, 0.1); mis.num2 <- 2:4
seq(1.0, 2.0, 0.1)
mis.num2
Mi.matriz <- matrix(1:12,3,4); Mi.matriz
LETTERS[1:5]
paste(LETTERS[1:5])
mis.caracteres <- paste(LETTERS[1:5]);mis.caracteres
mis.num > 1.65
mis.logicos <- mis.num > 1.65; mis.logicos
lista1 <- list(mis.num, mis.num2, Mi.matriz, mis.caracteres,mis.logicos)
lista1
library(sp)
library(rgdal)    # Manipular objetos espaciales (mejor con raster)
library(maptools) # Manipular objetos espaciales (mejor con vectores)
library(ggplot2) # Manipular objetos espaciales (mejor con vectores)
setwd("D:/R/CLASE01")
library(sp)
library(rgdal)    # Manipular objetos espaciales (mejor con raster)
library(maptools) # Manipular objetos espaciales (mejor con vectores)
library(ggplot2) # Manipular objetos espaciales (mejor con vectores)
list.files()
peru<-readOGR(dsn = "D:/R/CLASE01",layer="PER_adm0")
class(peru)
proj4string(peru)
head(peru@data)
head()
plot(peru,col="grey",axes=T,pch=21,bg="yellow")
peru_df<-data.frame(peru)
head(peru_df)
peru_2<-fortify(peru)
geom_polygon(aes)
rm(list = ls())
#instalacion de librerias necesarias
require(ggplot2)
require(forecast)
require(dplyr)
require(shinyBS)
require(data.table)
require(sp)
require(shiny)
require(zoo)
require(rgeos)
require(rgdal)
require(raster)
require(leaflet)
require(tcltk)
#-------------Run-------------
path0="C:/Ero1.0/bin/"
setwd(path0)
load("dataf.Rdata")
ero<-brick("C:/Ero1.0/bin/archivos/erobruta.gri")
erobruta<-brick("C:/Ero1.0/bin/archivos/eroacum.gri")
eroneta<-brick("C:/Ero1.0/bin/archivos/eroneta.gri")
if(length(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))>0){
s<-shapefile(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))
locs<-data.frame(loc=s$Name,lon=coordinates(s)[,1],lat=coordinates(s)[,2],stringsAsFactors = F)
} else { locs<-read.csv("C:/Ero1.0/station.csv",stringsAsFactors = F)}
decades <- seq(1981, 2015, by=1)
lon <- -73
lat <- -10
tb<-table(point = locs[1,])
for(i in 2:nrow(locs)) tb<-rbind(tb,table(point = locs[i,]))
colnames(tb)<-  c(names(tb)[1],"Location",names(tb)[3:ncol(tb)])
tb$Eroacum<-tb$Eroacum*7741.206/100
tb$Eronta<-tb$Eronta*7741.206/100
d<-tb
x<-  eroneta
runApp(appDir = path0,launch.browser = T)
require(ggplot2)
require(forecast)
require(dplyr)
require(shinyBS)
require(data.table)
require(sp)
require(shiny)
require(zoo)
require(rgeos)
require(rgdal)
require(raster)
require(leaflet)
require(tcltk)
path0="C:/Ero1.0/bin/"
setwd(path0)
load("dataf.Rdata")
ero<-brick("C:/Ero1.0/bin/archivos/erobruta.gri")
erobruta<-brick("C:/Ero1.0/bin/archivos/eroacum.gri")
eroneta<-brick("C:/Ero1.0/bin/archivos/eroneta.gri")
if(length(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))>0){
s<-shapefile(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))
locs<-data.frame(loc=s$Name,lon=coordinates(s)[,1],lat=coordinates(s)[,2],stringsAsFactors = F)
} else { locs<-read.csv("C:/Ero1.0/station.csv",stringsAsFactors = F)}
decades <- seq(1981, 2015, by=1)
lon <- -73
lat <- -10
if(length(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))>0){
s<-shapefile(list.files("C:/Ero1.0",all.files = T,full.names = T,pattern = "\\.shp$"))
locs<-data.frame(loc=s$Name,lon=coordinates(s)[,1],lat=coordinates(s)[,2],stringsAsFactors = F)
} else { locs<-read.csv("C:/Ero1.0/station.csv",stringsAsFactors = F)}
decades <- seq(1981, 2015, by=1)
lon <- -73
lat <- -10
tb<-table(point = locs[1,])
for(i in 2:nrow(locs)) tb<-rbind(tb,table(point = locs[i,]))
colnames(tb)<-  c(names(tb)[1],"Location",names(tb)[3:ncol(tb)])
tb$Eroacum<-tb$Eroacum*7741.206/100
tb$Eronta<-tb$Eronta*7741.206/100
for(i in 2:nrow(locs)) tb<-rbind(tb,table(point = locs[i,]))
